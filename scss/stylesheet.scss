$cube-size: 50px;
$cube-margin: $cube-size / 10;
$stage-size: ($cube-size + $cube-margin) * 3 - $cube-margin;

@keyframes rotate {
	  0% { transform: rotateX(  0deg) rotateY(  0deg) rotateZ(  0deg); }
	 10% { transform: rotateX( 90deg) rotateY(  0deg) rotateZ( 90deg); }
	 12% { transform: rotateX( 90deg) rotateY(  0deg) rotateZ( 90deg); }
	 22% { transform: rotateX(180deg) rotateY(  0deg) rotateZ(180deg); }
	 24% { transform: rotateX(180deg) rotateY(  0deg) rotateZ(180deg); }
	 34% { transform: rotateX(270deg) rotateY(  0deg) rotateZ(270deg); }
	 36% { transform: rotateX(270deg) rotateY(  0deg) rotateZ(270deg); }
	 46% { transform: rotateX(360deg) rotateY(  0deg) rotateZ(360deg); }
	 48% { transform: rotateX(360deg) rotateY(  0deg) rotateZ(360deg); }
	 58% { transform: rotateX(360deg) rotateY( 90deg) rotateZ(270deg); }
	 61% { transform: rotateX(360deg) rotateY( 90deg) rotateZ(270deg); }
	 71% { transform: rotateX(360deg) rotateY(180deg) rotateZ(180deg); }
	 74% { transform: rotateX(360deg) rotateY(180deg) rotateZ(180deg); }
	 84% { transform: rotateX(360deg) rotateY(270deg) rotateZ( 90deg); }
	 87% { transform: rotateX(360deg) rotateY(270deg) rotateZ( 90deg); }
	 97% { transform: rotateX(360deg) rotateY(360deg) rotateZ(  0deg); }
	100% { transform: rotateX(360deg) rotateY(360deg) rotateZ(  0deg); }
}

* {
	margin: 0;
	padding: 0;
}

html, body {
	width: 100%;
	height: 100%;
}

body {
	position: relative;
}

.stage {
	width: $stage-size;
	height: $stage-size;
	position: absolute;
	top: 50%;
	left: 50%;
	margin-top: $stage-size / 2 * -1;
	margin-left: $stage-size / 2 * -1;
	perspective: 1280px;
	transform-style: preserve-3d;

	.cube-big {
		transform-style: preserve-3d;
		transform-origin: $stage-size / 2, $stage-size / 2, 0;
		animation: rotate 7.5s infinite linear;

		.cube {
			transform-style: preserve-3d;

			&:hover {
				animation-play-state: paused;
			}

			@for $x from 1 through 3 {
				@for $y from 1 through 3 {
					@for $z from 1 through 3 {
						&.cube-x-#{$x}.cube-y-#{$y}.cube-z-#{$z} {
							transform:
								translateX(($cube-size + $cube-margin) * ($x - 1))
								translateY(($cube-size + $cube-margin) * ($y - 1))
								translateZ(($cube-size + $cube-margin) * ($z - 2));
						}
					}
				}
			}

			> div {
				position: absolute;
				width: $cube-size;
				height: $cube-size;
				box-shadow: inset 0 0 2px 5px rgba(0,0,0,.75);
				font-size: 0;

				&.front {
					background-color: rgba(0,54,204,.75);
					transform: translateZ($cube-size / 2);
				}

				&.back {
					background-color: rgba(255,153,0,.75);
					transform: rotateY(180deg) translateZ($cube-size / 2);
				}

				&.top {
					background-color: rgba(255,255,0,.75);
					transform: rotateX(90deg) translateZ($cube-size / 2);
				}

				&.bottom {
					background-color: rgba(0,255,0,.75);
					transform: rotateX(270deg) translateZ($cube-size / 2);
				}

				&.left {
					background-color: rgba(204,0,0,.75);
					transform: rotateY(270deg) translateZ($cube-size / 2);
				}

				&.right {
					background-color: rgba(255,255,255,.75);
					transform: rotateY(90deg) translateZ($cube-size / 2);
				}
			}
		}
	}
}